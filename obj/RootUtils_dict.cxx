//
// File generated by /home/marco/Downloads/root/bin/rootcint at Thu Apr  7 21:11:57 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME objdIRootUtils_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RootUtils_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void string_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void string_Dictionary();
   static void *new_string(void *p = 0);
   static void *newArray_string(Long_t size, void *p);
   static void delete_string(void *p);
   static void deleteArray_string(void *p);
   static void destruct_string(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const string*)
   {
      string *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(string),0);
      static ::ROOT::TGenericClassInfo 
         instance("string", "prec_stl/string", 39,
                  typeid(string), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &string_Dictionary, isa_proxy, 0,
                  sizeof(string) );
      instance.SetNew(&new_string);
      instance.SetNewArray(&newArray_string);
      instance.SetDelete(&delete_string);
      instance.SetDeleteArray(&deleteArray_string);
      instance.SetDestructor(&destruct_string);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const string*)
   {
      return GenerateInitInstanceLocal((string*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const string*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void string_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const string*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void PlotUtils_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PlotUtils(void *p = 0);
   static void *newArray_PlotUtils(Long_t size, void *p);
   static void delete_PlotUtils(void *p);
   static void deleteArray_PlotUtils(void *p);
   static void destruct_PlotUtils(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PlotUtils*)
   {
      ::PlotUtils *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PlotUtils >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PlotUtils", ::PlotUtils::Class_Version(), "src/PlotUtils.h", 60,
                  typeid(::PlotUtils), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PlotUtils::Dictionary, isa_proxy, 4,
                  sizeof(::PlotUtils) );
      instance.SetNew(&new_PlotUtils);
      instance.SetNewArray(&newArray_PlotUtils);
      instance.SetDelete(&delete_PlotUtils);
      instance.SetDeleteArray(&deleteArray_PlotUtils);
      instance.SetDestructor(&destruct_PlotUtils);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PlotUtils*)
   {
      return GenerateInitInstanceLocal((::PlotUtils*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PlotUtils*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ConfigParser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ConfigParser(void *p = 0);
   static void *newArray_ConfigParser(Long_t size, void *p);
   static void delete_ConfigParser(void *p);
   static void deleteArray_ConfigParser(void *p);
   static void destruct_ConfigParser(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ConfigParser*)
   {
      ::ConfigParser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ConfigParser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ConfigParser", ::ConfigParser::Class_Version(), "src/ConfigParser.h", 45,
                  typeid(::ConfigParser), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ConfigParser::Dictionary, isa_proxy, 4,
                  sizeof(::ConfigParser) );
      instance.SetNew(&new_ConfigParser);
      instance.SetNewArray(&newArray_ConfigParser);
      instance.SetDelete(&delete_ConfigParser);
      instance.SetDeleteArray(&deleteArray_ConfigParser);
      instance.SetDestructor(&destruct_ConfigParser);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ConfigParser*)
   {
      return GenerateInitInstanceLocal((::ConfigParser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ConfigParser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator_Dictionary();
   static void *new_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void *p = 0);
   static void *newArray_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(Long_t size, void *p);
   static void delete_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void *p);
   static void deleteArray_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void *p);
   static void destruct_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vector<string,allocator<string> >::iterator*)
   {
      ::vector<string,allocator<string> >::iterator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::vector<string,allocator<string> >::iterator),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string,allocator<string> >::iterator", "prec_stl/vector", 269,
                  typeid(::vector<string,allocator<string> >::iterator), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator_Dictionary, isa_proxy, 0,
                  sizeof(::vector<string,allocator<string> >::iterator) );
      instance.SetNew(&new_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator);
      instance.SetNewArray(&newArray_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator);
      instance.SetDelete(&delete_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator);
      instance.SetDeleteArray(&deleteArray_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator);
      instance.SetDestructor(&destruct_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vector<string,allocator<string> >::iterator*)
   {
      return GenerateInitInstanceLocal((::vector<string,allocator<string> >::iterator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vector<string,allocator<string> >::iterator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::vector<string,allocator<string> >::iterator*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator_Dictionary();
   static void *new_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void *p = 0);
   static void *newArray_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(Long_t size, void *p);
   static void delete_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void *p);
   static void deleteArray_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void *p);
   static void destruct_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*)
   {
      ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string,less<string>,allocator<pair<const string,string> > >::iterator", "prec_stl/map", 103,
                  typeid(::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator_Dictionary, isa_proxy, 0,
                  sizeof(::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator) );
      instance.SetNew(&new_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
      instance.SetNewArray(&newArray_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
      instance.SetDelete(&delete_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
      instance.SetDestructor(&destruct_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*)
   {
      return GenerateInitInstanceLocal((::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator_Dictionary();
   static void *new_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void *p = 0);
   static void *newArray_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(Long_t size, void *p);
   static void delete_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void *p);
   static void deleteArray_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void *p);
   static void destruct_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*)
   {
      ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator", "prec_stl/map", 103,
                  typeid(::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator_Dictionary, isa_proxy, 0,
                  sizeof(::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator) );
      instance.SetNew(&new_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator);
      instance.SetNewArray(&newArray_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator);
      instance.SetDelete(&delete_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator);
      instance.SetDeleteArray(&deleteArray_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator);
      instance.SetDestructor(&destruct_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*)
   {
      return GenerateInitInstanceLocal((::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr PlotUtils::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PlotUtils::Class_Name()
{
   return "PlotUtils";
}

//______________________________________________________________________________
const char *PlotUtils::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PlotUtils*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PlotUtils::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PlotUtils*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PlotUtils::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PlotUtils*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PlotUtils::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PlotUtils*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ConfigParser::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ConfigParser::Class_Name()
{
   return "ConfigParser";
}

//______________________________________________________________________________
const char *ConfigParser::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ConfigParser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ConfigParser::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ConfigParser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ConfigParser::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ConfigParser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ConfigParser::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ConfigParser*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void PlotUtils::Streamer(TBuffer &R__b)
{
   // Stream an object of class PlotUtils.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PlotUtils::Class(),this);
   } else {
      R__b.WriteClassBuffer(PlotUtils::Class(),this);
   }
}

//______________________________________________________________________________
void PlotUtils::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PlotUtils.
      TClass *R__cl = ::PlotUtils::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_rooplots", (void*)&_rooplots);
      R__insp.InspectMember("vector<RooPlot*>", (void*)&_rooplots, "_rooplots.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hist", (void*)&_hist);
      R__insp.InspectMember("vector<TH1*>", (void*)&_hist, "_hist.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_palette", (void*)&_palette);
      R__insp.InspectMember("ColorPalette", (void*)&_palette, "_palette.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_canvas", &_canvas);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PlotUtils(void *p) {
      return  p ? new(p) ::PlotUtils : new ::PlotUtils;
   }
   static void *newArray_PlotUtils(Long_t nElements, void *p) {
      return p ? new(p) ::PlotUtils[nElements] : new ::PlotUtils[nElements];
   }
   // Wrapper around operator delete
   static void delete_PlotUtils(void *p) {
      delete ((::PlotUtils*)p);
   }
   static void deleteArray_PlotUtils(void *p) {
      delete [] ((::PlotUtils*)p);
   }
   static void destruct_PlotUtils(void *p) {
      typedef ::PlotUtils current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PlotUtils

//______________________________________________________________________________
void ConfigParser::Streamer(TBuffer &R__b)
{
   // Stream an object of class ConfigParser.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ConfigParser::Class(),this);
   } else {
      R__b.WriteClassBuffer(ConfigParser::Class(),this);
   }
}

//______________________________________________________________________________
void ConfigParser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ConfigParser.
      TClass *R__cl = ::ConfigParser::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_names", (void*)&_names);
      R__insp.InspectMember("vector<string>", (void*)&_names, "_names.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_options", (void*)&_options);
      R__insp.InspectMember("vector<Option<string> >", (void*)&_options, "_options.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_verbose", &_verbose);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ConfigParser(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ConfigParser : new ::ConfigParser;
   }
   static void *newArray_ConfigParser(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ConfigParser[nElements] : new ::ConfigParser[nElements];
   }
   // Wrapper around operator delete
   static void delete_ConfigParser(void *p) {
      delete ((::ConfigParser*)p);
   }
   static void deleteArray_ConfigParser(void *p) {
      delete [] ((::ConfigParser*)p);
   }
   static void destruct_ConfigParser(void *p) {
      typedef ::ConfigParser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ConfigParser

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator : new ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator;
   }
   static void *newArray_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator[nElements] : new ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void *p) {
      delete ((::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*)p);
   }
   static void deleteArray_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void *p) {
      delete [] ((::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*)p);
   }
   static void destruct_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void *p) {
      typedef ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::map<string,string,less<string>,allocator<pair<const string,string> > >::iterator

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::vector<string,allocator<string> >::iterator : new ::vector<string,allocator<string> >::iterator;
   }
   static void *newArray_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::vector<string,allocator<string> >::iterator[nElements] : new ::vector<string,allocator<string> >::iterator[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void *p) {
      delete ((::vector<string,allocator<string> >::iterator*)p);
   }
   static void deleteArray_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void *p) {
      delete [] ((::vector<string,allocator<string> >::iterator*)p);
   }
   static void destruct_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void *p) {
      typedef ::vector<string,allocator<string> >::iterator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vector<string,allocator<string> >::iterator

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator : new ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator;
   }
   static void *newArray_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator[nElements] : new ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void *p) {
      delete ((::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*)p);
   }
   static void deleteArray_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void *p) {
      delete [] ((::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*)p);
   }
   static void destruct_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void *p) {
      typedef ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_string(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) string : new string;
   }
   static void *newArray_string(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) string[nElements] : new string[nElements];
   }
   // Wrapper around operator delete
   static void delete_string(void *p) {
      delete ((string*)p);
   }
   static void deleteArray_string(void *p) {
      delete [] ((string*)p);
   }
   static void destruct_string(void *p) {
      typedef string current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class string

namespace ROOTDict {
   void maplEstringcOboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOboolgR_Dictionary();
   static void *new_maplEstringcOboolgR(void *p = 0);
   static void *newArray_maplEstringcOboolgR(Long_t size, void *p);
   static void delete_maplEstringcOboolgR(void *p);
   static void deleteArray_maplEstringcOboolgR(void *p);
   static void destruct_maplEstringcOboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,bool>*)
   {
      map<string,bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,bool>", -2, "prec_stl/map", 63,
                  typeid(map<string,bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOboolgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,bool>) );
      instance.SetNew(&new_maplEstringcOboolgR);
      instance.SetNewArray(&newArray_maplEstringcOboolgR);
      instance.SetDelete(&delete_maplEstringcOboolgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOboolgR);
      instance.SetDestructor(&destruct_maplEstringcOboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,bool> : new map<string,bool>;
   }
   static void *newArray_maplEstringcOboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,bool>[nElements] : new map<string,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOboolgR(void *p) {
      delete ((map<string,bool>*)p);
   }
   static void deleteArray_maplEstringcOboolgR(void *p) {
      delete [] ((map<string,bool>*)p);
   }
   static void destruct_maplEstringcOboolgR(void *p) {
      typedef map<string,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,bool>

namespace ROOTDict {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "prec_stl/map", 63,
                  typeid(map<string,string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,string>

namespace ROOTDict {
   void vectorlEOptionlEstringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEOptionlEstringgRsPgR_Dictionary();
   static void *new_vectorlEOptionlEstringgRsPgR(void *p = 0);
   static void *newArray_vectorlEOptionlEstringgRsPgR(Long_t size, void *p);
   static void delete_vectorlEOptionlEstringgRsPgR(void *p);
   static void deleteArray_vectorlEOptionlEstringgRsPgR(void *p);
   static void destruct_vectorlEOptionlEstringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Option<string> >*)
   {
      vector<Option<string> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Option<string> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Option<string> >", -2, "prec_stl/vector", 49,
                  typeid(vector<Option<string> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEOptionlEstringgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Option<string> >) );
      instance.SetNew(&new_vectorlEOptionlEstringgRsPgR);
      instance.SetNewArray(&newArray_vectorlEOptionlEstringgRsPgR);
      instance.SetDelete(&delete_vectorlEOptionlEstringgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEOptionlEstringgRsPgR);
      instance.SetDestructor(&destruct_vectorlEOptionlEstringgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Option<string> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Option<string> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEOptionlEstringgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Option<string> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEOptionlEstringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Option<string> > : new vector<Option<string> >;
   }
   static void *newArray_vectorlEOptionlEstringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Option<string> >[nElements] : new vector<Option<string> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEOptionlEstringgRsPgR(void *p) {
      delete ((vector<Option<string> >*)p);
   }
   static void deleteArray_vectorlEOptionlEstringgRsPgR(void *p) {
      delete [] ((vector<Option<string> >*)p);
   }
   static void destruct_vectorlEOptionlEstringgRsPgR(void *p) {
      typedef vector<Option<string> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Option<string> >

namespace ROOTDict {
   void vectorlERooPlotmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERooPlotmUgR_Dictionary();
   static void *new_vectorlERooPlotmUgR(void *p = 0);
   static void *newArray_vectorlERooPlotmUgR(Long_t size, void *p);
   static void delete_vectorlERooPlotmUgR(void *p);
   static void deleteArray_vectorlERooPlotmUgR(void *p);
   static void destruct_vectorlERooPlotmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RooPlot*>*)
   {
      vector<RooPlot*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RooPlot*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RooPlot*>", -2, "prec_stl/vector", 49,
                  typeid(vector<RooPlot*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERooPlotmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RooPlot*>) );
      instance.SetNew(&new_vectorlERooPlotmUgR);
      instance.SetNewArray(&newArray_vectorlERooPlotmUgR);
      instance.SetDelete(&delete_vectorlERooPlotmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERooPlotmUgR);
      instance.SetDestructor(&destruct_vectorlERooPlotmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RooPlot*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RooPlot*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERooPlotmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RooPlot*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERooPlotmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RooPlot*> : new vector<RooPlot*>;
   }
   static void *newArray_vectorlERooPlotmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RooPlot*>[nElements] : new vector<RooPlot*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERooPlotmUgR(void *p) {
      delete ((vector<RooPlot*>*)p);
   }
   static void deleteArray_vectorlERooPlotmUgR(void *p) {
      delete [] ((vector<RooPlot*>*)p);
   }
   static void destruct_vectorlERooPlotmUgR(void *p) {
      typedef vector<RooPlot*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RooPlot*>

namespace ROOTDict {
   void vectorlETH1mUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETH1mUgR_Dictionary();
   static void *new_vectorlETH1mUgR(void *p = 0);
   static void *newArray_vectorlETH1mUgR(Long_t size, void *p);
   static void delete_vectorlETH1mUgR(void *p);
   static void deleteArray_vectorlETH1mUgR(void *p);
   static void destruct_vectorlETH1mUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TH1*>*)
   {
      vector<TH1*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TH1*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TH1*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TH1*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETH1mUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TH1*>) );
      instance.SetNew(&new_vectorlETH1mUgR);
      instance.SetNewArray(&newArray_vectorlETH1mUgR);
      instance.SetDelete(&delete_vectorlETH1mUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETH1mUgR);
      instance.SetDestructor(&destruct_vectorlETH1mUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TH1*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TH1*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETH1mUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TH1*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETH1mUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1*> : new vector<TH1*>;
   }
   static void *newArray_vectorlETH1mUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1*>[nElements] : new vector<TH1*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETH1mUgR(void *p) {
      delete ((vector<TH1*>*)p);
   }
   static void deleteArray_vectorlETH1mUgR(void *p) {
      delete [] ((vector<TH1*>*)p);
   }
   static void destruct_vectorlETH1mUgR(void *p) {
      typedef vector<TH1*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TH1*>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

/********************************************************
* obj/RootUtils_dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRootUtils_dict();

extern "C" void G__set_cpp_environmentRootUtils_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("dict/RootUtils_dict.h");
  G__cpp_reset_tagtableRootUtils_dict();
}
#include <new>
extern "C" int G__cpp_dllrevRootUtils_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* string */
static int G__RootUtils_dict_116_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   string* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new string[n];
     } else {
       p = new((void*) gvp) string[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new string;
     } else {
       p = new((void*) gvp) string;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   string* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new string(*(string*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) string(*(string*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   string* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new string(
*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) string(
*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   string* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new string((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) string((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   string* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new string((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) string((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   string* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new string((size_t) G__int(libp->para[0]), (char) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) string((size_t) G__int(libp->para[0]), (char) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->operator=(*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->operator=((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->operator=((char) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->operator+=(*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->operator+=((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->operator+=((char) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->append(*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->append(*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->append((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->append((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->append((size_t) G__int(libp->para[0]), (char) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->assign(*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->assign(*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->assign((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->assign((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->assign((size_t) G__int(libp->para[0]), (char) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->insert((size_t) G__int(libp->para[0]), *(string*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->insert((size_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (size_t) G__int(libp->para[2]), (size_t) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->insert((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->insert((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->insert((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (char) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->replace((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->replace((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, *(string*) libp->para[2].ref, (size_t) G__int(libp->para[3])
, (size_t) G__int(libp->para[4]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->replace((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (size_t) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->replace((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((string*) G__getstructoffset())->replace((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (char) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((const string*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((string*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((const string*) G__getstructoffset())->at((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((string*) G__getstructoffset())->at((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const string*) G__getstructoffset())->c_str());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const string*) G__getstructoffset())->data());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->length());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((string*) G__getstructoffset())->resize((size_t) G__int(libp->para[0]), (char) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((string*) G__getstructoffset())->resize((size_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((string*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((string*) G__getstructoffset())->reserve((size_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 107, (long) ((string*) G__getstructoffset())->copy((char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 107, (long) ((string*) G__getstructoffset())->copy((char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find(*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find((char) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find((char) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->rfind(*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->rfind(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->rfind((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->rfind((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->rfind((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->rfind((char) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->rfind((char) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_of(*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_of(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_of((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_of((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_of((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_of((char) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_of((char) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_of(*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_of(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_of((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_of((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_of((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_of((char) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_of((char) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_not_of(*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_not_of(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_not_of((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_not_of((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_not_of((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_not_of((char) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_first_not_of((char) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_not_of(*(string*) libp->para[0].ref, (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_not_of(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_not_of((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_not_of((const char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_not_of((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_not_of((char) G__int(libp->para[0]), (size_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->find_last_not_of((char) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const string* pobj;
         const string xobj = ((const string*) G__getstructoffset())->substr((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const string* pobj;
         const string xobj = ((const string*) G__getstructoffset())->substr((size_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const string* pobj;
         const string xobj = ((const string*) G__getstructoffset())->substr();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const string*) G__getstructoffset())->compare(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const string*) G__getstructoffset())->compare((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const string& obj = ((string*) G__getstructoffset())->erase((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const string& obj = ((string*) G__getstructoffset())->erase((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const string& obj = ((string*) G__getstructoffset())->erase();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string::iterator* pobj;
         string::iterator xobj = ((string*) G__getstructoffset())->erase(*((string::iterator*) G__int(libp->para[0])));
         pobj = new string::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string::iterator* pobj;
         string::iterator xobj = ((string*) G__getstructoffset())->erase(*((string::iterator*) G__int(libp->para[0])), *((string::iterator*) G__int(libp->para[1])));
         pobj = new string::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string::iterator* pobj;
         string::iterator xobj = ((string*) G__getstructoffset())->begin();
         pobj = new string::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string::const_iterator* pobj;
         const string::const_iterator xobj = ((const string*) G__getstructoffset())->begin();
         pobj = new string::const_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string::iterator* pobj;
         string::iterator xobj = ((string*) G__getstructoffset())->end();
         pobj = new string::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string::const_iterator* pobj;
         const string::const_iterator xobj = ((const string*) G__getstructoffset())->end();
         pobj = new string::const_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((string*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const string*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_116_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const string*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef string G__Tstring;
static int G__RootUtils_dict_116_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (string*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((string*) (soff+(sizeof(string)*i)))->~G__Tstring();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (string*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((string*) (soff))->~G__Tstring();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PlotUtils */
static int G__RootUtils_dict_297_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PlotUtils* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils[n];
     } else {
       p = new((void*) gvp) PlotUtils[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils;
     } else {
       p = new((void*) gvp) PlotUtils;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PlotUtils* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils(
(RooPlot*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) PlotUtils(
(RooPlot*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils(
(RooPlot*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) PlotUtils(
(RooPlot*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils((RooPlot*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) PlotUtils((RooPlot*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils((RooPlot*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) PlotUtils((RooPlot*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PlotUtils* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils(
(TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) PlotUtils(
(TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils(
(TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) PlotUtils(
(TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) PlotUtils((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotUtils((TH1*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) PlotUtils((TH1*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PlotUtils*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((PlotUtils*) G__getstructoffset())->AddRooPlot((RooPlot*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((PlotUtils*) G__getstructoffset())->AddRooPlot((RooPlot*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((PlotUtils*) G__getstructoffset())->AddRooPlot((RooPlot*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((PlotUtils*) G__getstructoffset())->AddRooPlot((RooPlot*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((PlotUtils*) G__getstructoffset())->AddHist((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((PlotUtils*) G__getstructoffset())->AddHist((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((PlotUtils*) G__getstructoffset())->AddHist((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((PlotUtils*) G__getstructoffset())->AddHist((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      ((PlotUtils*) G__getstructoffset())->AddData(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (const char*) G__int(libp->para[8]), (const char*) G__int(libp->para[9])
, (const char*) G__int(libp->para[10]), (const char*) G__int(libp->para[11]));
      G__setnull(result7);
      break;
   case 11:
      ((PlotUtils*) G__getstructoffset())->AddData(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (const char*) G__int(libp->para[8]), (const char*) G__int(libp->para[9])
, (const char*) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((PlotUtils*) G__getstructoffset())->AddData(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (const char*) G__int(libp->para[8]), (const char*) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((PlotUtils*) G__getstructoffset())->AddData(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (const char*) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((PlotUtils*) G__getstructoffset())->AddData(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((PlotUtils*) G__getstructoffset())->AddData(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((PlotUtils*) G__getstructoffset())->AddData((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((PlotUtils*) G__getstructoffset())->AddData((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((PlotUtils*) G__getstructoffset())->AddTextLHCb((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((PlotUtils*) G__getstructoffset())->AddTextLHCb((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((PlotUtils*) G__getstructoffset())->AddTextLHCb((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->AddTextLHCb();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PlotUtils*) G__getstructoffset())->AddLegend((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetStats((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetStats();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((PlotUtils*) G__getstructoffset())->SetPalette((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((PlotUtils*) G__getstructoffset())->SetPalette((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((PlotUtils*) G__getstructoffset())->SetPalette());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((PlotUtils*) G__getstructoffset())->FillHistograms((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((PlotUtils*) G__getstructoffset())->FillHistograms((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((PlotUtils*) G__getstructoffset())->FillHistograms());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((PlotUtils*) G__getstructoffset())->PlotAllHist((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((PlotUtils*) G__getstructoffset())->PlotAllHist((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((PlotUtils*) G__getstructoffset())->PlotAllHist());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((PlotUtils*) G__getstructoffset())->PlotHistSameCanvas((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((PlotUtils*) G__getstructoffset())->PlotHistSameCanvas((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((PlotUtils*) G__getstructoffset())->PlotHistSameCanvas());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((PlotUtils*) G__getstructoffset())->DrawVerticalLine((Double_t) G__double(libp->para[0]), (Color_t) G__int(libp->para[1])
, (Style_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((PlotUtils*) G__getstructoffset())->DrawVerticalLine((Double_t) G__double(libp->para[0]), (Color_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((PlotUtils*) G__getstructoffset())->DrawVerticalLine((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((PlotUtils*) G__getstructoffset())->DrawHorizontalLine((Double_t) G__double(libp->para[0]), (Color_t) G__int(libp->para[1])
, (Style_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((PlotUtils*) G__getstructoffset())->DrawHorizontalLine((Double_t) G__double(libp->para[0]), (Color_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((PlotUtils*) G__getstructoffset())->DrawHorizontalLine((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PlotUtils*) G__getstructoffset())->SetTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PlotUtils*) G__getstructoffset())->SetXTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetXTitleSize((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetXTitleSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetXTitleOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetXTitleOffset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetXLabelSize((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetXLabelSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetXLabelOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetXLabelOffset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PlotUtils*) G__getstructoffset())->SetYTitle((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetYTitleSize((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetYTitleSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetYTitleOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetYTitleOffset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetYLabelSize((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetYLabelSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetYLabelOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetYLabelOffset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((PlotUtils*) G__getstructoffset())->SetYLabelBinLenght((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((PlotUtils*) G__getstructoffset())->SetYLabelBinLenght((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PlotUtils*) G__getstructoffset())->SetYLabelBinLenght();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RooPlot& obj = ((const PlotUtils*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PlotUtils::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PlotUtils::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PlotUtils::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PlotUtils::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PlotUtils*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PlotUtils::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PlotUtils::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PlotUtils::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_297_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PlotUtils::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootUtils_dict_297_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PlotUtils* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PlotUtils(*(PlotUtils*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PlotUtils G__TPlotUtils;
static int G__RootUtils_dict_297_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PlotUtils*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PlotUtils*) (soff+(sizeof(PlotUtils)*i)))->~G__TPlotUtils();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PlotUtils*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PlotUtils*) (soff))->~G__TPlotUtils();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ConfigParser */
static int G__RootUtils_dict_307_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConfigParser* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConfigParser[n];
     } else {
       p = new((void*) gvp) ConfigParser[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConfigParser;
     } else {
       p = new((void*) gvp) ConfigParser;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_ConfigParser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConfigParser* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConfigParser((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ConfigParser((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConfigParser((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ConfigParser((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_ConfigParser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConfigParser*) G__getstructoffset())->Fill((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigParser*) G__getstructoffset())->GetString(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((ConfigParser*) G__getstructoffset())->GetConstChar(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigParser*) G__getstructoffset())->GetInt(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConfigParser*) G__getstructoffset())->GetDouble(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((ConfigParser*) G__getstructoffset())->GetIntArray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((ConfigParser*) G__getstructoffset())->GetDoubleArray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConfigParser*) G__getstructoffset())->GetStringArray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ConfigParser*) G__getstructoffset())->GetIntVector(*((string*) G__int(libp->para[0])));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ConfigParser*) G__getstructoffset())->GetDoubleVector(*((string*) G__int(libp->para[0])));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string>* pobj;
         vector<string> xobj = ((ConfigParser*) G__getstructoffset())->GetStringVector(*((string*) G__int(libp->para[0])));
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TString>* pobj;
         vector<TString> xobj = ((ConfigParser*) G__getstructoffset())->GetTStringVector(*((string*) G__int(libp->para[0])));
         pobj = new vector<TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConfigParser*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConfigParser*) G__getstructoffset())->SetVerbose((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ConfigParser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConfigParser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ConfigParser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ConfigParser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ConfigParser*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConfigParser*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConfigParser*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConfigParser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConfigParser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ConfigParser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConfigParser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_307_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ConfigParser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootUtils_dict_307_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ConfigParser* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ConfigParser(*(ConfigParser*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_ConfigParser));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ConfigParser G__TConfigParser;
static int G__RootUtils_dict_307_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ConfigParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ConfigParser*) (soff+(sizeof(ConfigParser)*i)))->~G__TConfigParser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ConfigParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ConfigParser*) (soff))->~G__TConfigParser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RootUtils_dict_307_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConfigParser* dest = (ConfigParser*) G__getstructoffset();
   *dest = *(ConfigParser*) libp->para[0].ref;
   const ConfigParser& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<string,allocator<string> > */
static int G__RootUtils_dict_313_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::reference obj = ((vector<string,allocator<string> >*) G__getstructoffset())->at((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::const_reference obj = ((const vector<string,allocator<string> >*) G__getstructoffset())->at((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->begin();
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->end();
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::reverse_iterator* pobj;
         vector<string,allocator<string> >::reverse_iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->rbegin();
         pobj = new vector<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::reverse_iterator* pobj;
         vector<string,allocator<string> >::reverse_iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->rend();
         pobj = new vector<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->resize((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->resize((vector<string,allocator<string> >::size_type) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::reference obj = ((vector<string,allocator<string> >*) G__getstructoffset())->operator[]((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::const_reference obj = ((const vector<string,allocator<string> >*) G__getstructoffset())->operator[]((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >[n];
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >;
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]), *(string*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]), *(string*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<string,allocator<string> >(*(vector<string,allocator<string> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<string,allocator<string> >(*(vector<string,allocator<string> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<string,allocator<string> >(*((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<string,allocator<string> >(*((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->operator=(*(vector<string,allocator<string> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->reserve((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->push_back(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->swap(*(vector<string,allocator<string> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->insert(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), *(string*) libp->para[1].ref);
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->insert(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[1]))
, *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->insert(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), (vector<string,allocator<string> >::size_type) G__int(libp->para[1])
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->erase(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->erase(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_313_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<string,allocator<string> > G__TvectorlEstringcOallocatorlEstringgRsPgR;
static int G__RootUtils_dict_313_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<string,allocator<string> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<string,allocator<string> >*) (soff+(sizeof(vector<string,allocator<string> >)*i)))->~G__TvectorlEstringcOallocatorlEstringgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<string,allocator<string> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<string,allocator<string> >*) (soff))->~G__TvectorlEstringcOallocatorlEstringgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<string,allocator<string> >::iterator */
static int G__RootUtils_dict_314_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >::iterator;
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<string,allocator<string> >::iterator(libp->para[0].ref ? *(const vector<string,allocator<string> >::iterator::pointer*) libp->para[0].ref : *(const vector<string,allocator<string> >::iterator::pointer*) (void*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<string,allocator<string> >::iterator(libp->para[0].ref ? *(const vector<string,allocator<string> >::iterator::pointer*) libp->para[0].ref : *(const vector<string,allocator<string> >::iterator::pointer*) (void*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::iterator::reference obj = ((const vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::iterator& obj = ((vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::iterator& obj = ((vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::iterator::reference obj = ((const vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator[](*(vector<string,allocator<string> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::iterator& obj = ((vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator+=(*(vector<string,allocator<string> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::iterator* pobj;
         const vector<string,allocator<string> >::iterator xobj = ((const vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator+(*(vector<string,allocator<string> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::iterator& obj = ((vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator-=(*(vector<string,allocator<string> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::iterator* pobj;
         const vector<string,allocator<string> >::iterator xobj = ((const vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator-(*(vector<string,allocator<string> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::iterator::pointer& obj = ((const vector<string,allocator<string> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_314_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >::iterator*) G__getstructoffset())->operator=(*(vector<string,allocator<string> >::iterator*) libp->para[0].ref);
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootUtils_dict_314_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<string,allocator<string> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<string,allocator<string> >::iterator(*(vector<string,allocator<string> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<string,allocator<string> >::iterator G__TvectorlEstringcOallocatorlEstringgRsPgRcLcLiterator;
static int G__RootUtils_dict_314_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<string,allocator<string> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<string,allocator<string> >::iterator*) (soff+(sizeof(vector<string,allocator<string> >::iterator)*i)))->~G__TvectorlEstringcOallocatorlEstringgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<string,allocator<string> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<string,allocator<string> >::iterator*) (soff))->~G__TvectorlEstringcOallocatorlEstringgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,string,less<string>,allocator<pair<const string,string> > > */
static int G__RootUtils_dict_563_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >[n];
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >;
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,string,less<string>,allocator<pair<const string,string> > >& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->operator=(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->begin();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->end();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->rend();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>* pobj;
         pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool> xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*(map<string,string,less<string>,allocator<pair<const string,string> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *(map<string,string,less<string>,allocator<pair<const string,string> > >::value_type*) libp->para[1].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->swap(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_563_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,string,less<string>,allocator<pair<const string,string> > > G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR;
static int G__RootUtils_dict_563_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,string,less<string>,allocator<pair<const string,string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,string,less<string>,allocator<pair<const string,string> > >*) (soff+(sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >)*i)))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,string,less<string>,allocator<pair<const string,string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,string,less<string>,allocator<pair<const string,string> > >*) (soff))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,string,less<string>,allocator<pair<const string,string> > >::iterator */
static int G__RootUtils_dict_565_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator[n];
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator;
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(*(map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(*(map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,string,less<string>,allocator<pair<const string,string> > >::iterator& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__getstructoffset())->operator=(*(map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,string,less<string>,allocator<pair<const string,string> > >::value_type& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,string,less<string>,allocator<pair<const string,string> > >::iterator& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,string,less<string>,allocator<pair<const string,string> > >::iterator& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__getstructoffset())->operator==(*(map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_565_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__getstructoffset())->operator!=(*(map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,string,less<string>,allocator<pair<const string,string> > >::iterator G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator;
static int G__RootUtils_dict_565_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) (soff+(sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >::iterator)*i)))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) (soff))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,bool,less<string>,allocator<pair<const string,bool> > > */
static int G__RootUtils_dict_570_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >[n];
     } else {
       p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >;
     } else {
       p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,bool,less<string>,allocator<pair<const string,bool> > >& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->operator=(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->begin();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->end();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->rend();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const bool& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool>* pobj;
         pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool> xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *(map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type*) libp->para[1].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->erase(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->erase(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->swap(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_570_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,bool,less<string>,allocator<pair<const string,bool> > > G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR;
static int G__RootUtils_dict_570_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,bool,less<string>,allocator<pair<const string,bool> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) (soff+(sizeof(map<string,bool,less<string>,allocator<pair<const string,bool> > >)*i)))->~G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,bool,less<string>,allocator<pair<const string,bool> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) (soff))->~G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator */
static int G__RootUtils_dict_572_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator[n];
     } else {
       p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator;
     } else {
       p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__getstructoffset())->operator=(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__getstructoffset())->operator==(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootUtils_dict_572_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__getstructoffset())->operator!=(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator;
static int G__RootUtils_dict_572_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) (soff+(sizeof(map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator)*i)))->~G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) (soff))->~G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* string */

/* PlotUtils */

/* ConfigParser */

/* vector<string,allocator<string> > */

/* vector<string,allocator<string> >::iterator */

/* map<string,string,less<string>,allocator<pair<const string,string> > > */

/* map<string,string,less<string>,allocator<pair<const string,string> > >::iterator */

/* map<string,bool,less<string>,allocator<pair<const string,bool> > > */

/* map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRootUtils_dict {
 public:
  G__Sizep2memfuncRootUtils_dict(): p(&G__Sizep2memfuncRootUtils_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRootUtils_dict::*p)();
};

size_t G__get_sizep2memfuncRootUtils_dict()
{
  G__Sizep2memfuncRootUtils_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRootUtils_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils))) {
     PlotUtils *G__Lderived;
     G__Lderived=(PlotUtils*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils),G__get_linked_tagnum(&G__RootUtils_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRootUtils_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Style_t",115,-1,0,-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Color_t",115,-1,0,-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("value_type",99,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,256,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",99,-1,1,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",99,-1,257,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("traits_type",105,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_stringcLcLiterator),256,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEstringcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEstringcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEstringcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEstringcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooPlot*>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlERooPlotmUcOallocatorlERooPlotmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlERooPlotmUcOallocatorlERooPlotmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlERooPlotmUcOallocatorlERooPlotmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlERooPlotmUcOallocatorlERooPlotmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlERooPlotmUcOallocatorlERooPlotmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1*>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RootUtils_dictLN_string),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RootUtils_dictLN_string),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RootUtils_dictLN_string),256,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RootUtils_dictLN_string),1,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RootUtils_dictLN_string),257,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__RootUtils_dictLN_string),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__RootUtils_dictLN_string),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__RootUtils_dictLN_string),1,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__RootUtils_dictLN_string),1,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Option<string> >",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__RootUtils_dictLN_string),0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__RootUtils_dictLN_string),0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RootUtils_dictLN_pairlEstringcOstringgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__RootUtils_dictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__RootUtils_dictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,bool>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__RootUtils_dictLN_string),0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",103,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__RootUtils_dictLN_pairlEstringcOboolgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__RootUtils_dictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__RootUtils_dictLN_allocatorlEpairlEconstsPstringcOboolgRsPgR),0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool,less<string> >",117,G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* string */
static void G__setup_memvarstring(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   { string *p; p=(string*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,107,0,1,-1,G__defined_typename("size_t"),-2,1,G__FastAllocString(2048).Format("npos=%lluULL",(unsigned long long)string::npos).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PlotUtils */
static void G__setup_memvarPlotUtils(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils));
   { PlotUtils *p; p=(PlotUtils*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlERooPlotmUcOallocatorlERooPlotmUgRsPgR),G__defined_typename("vector<RooPlot*>"),-1,2,"_rooplots=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR),G__defined_typename("vector<TH1*>"),-1,2,"_hist=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootUtils_dictLN_ColorPalette),-1,-1,2,"_palette=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootUtils_dictLN_TCanvas),-1,-1,2,"_canvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootUtils_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ConfigParser */
static void G__setup_memvarConfigParser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_ConfigParser));
   { ConfigParser *p; p=(ConfigParser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RootUtils_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,4,"_names=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgR),G__defined_typename("vector<Option<string> >"),-1,4,"_options=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_verbose=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<string,allocator<string> > */
static void G__setup_memvarvectorlEstringcOallocatorlEstringgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   { vector<string,allocator<string> > *p; p=(vector<string,allocator<string> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<string,allocator<string> >::iterator */
static void G__setup_memvarvectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   { vector<string,allocator<string> >::iterator *p; p=(vector<string,allocator<string> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,string,less<string>,allocator<pair<const string,string> > > */
static void G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   { map<string,string,less<string>,allocator<pair<const string,string> > > *p; p=(map<string,string,less<string>,allocator<pair<const string,string> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,string,less<string>,allocator<pair<const string,string> > >::iterator */
static void G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator));
   { map<string,string,less<string>,allocator<pair<const string,string> > >::iterator *p; p=(map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,bool,less<string>,allocator<pair<const string,bool> > > */
static void G__setup_memvarmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   { map<string,bool,less<string>,allocator<pair<const string,bool> > > *p; p=(map<string,bool,less<string>,allocator<pair<const string,bool> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator */
static void G__setup_memvarmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator));
   { map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator *p; p=(map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRootUtils_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncstring(void) {
   /* string */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_string));
   G__memfunc_setup("string",663,G__RootUtils_dict_116_0_1, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("string",663,G__RootUtils_dict_116_0_2, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("string",663,G__RootUtils_dict_116_0_3, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 0, 3, 1, 1, 0, 
"u 'string' - 11 - str k - 'size_t' 0 - pos "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("string",663,G__RootUtils_dict_116_0_4, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 0, 2, 1, 1, 0, 
"C - - 10 - s k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("string",663,G__RootUtils_dict_116_0_5, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 0, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("string",663,G__RootUtils_dict_116_0_6, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - rep c - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RootUtils_dict_116_0_7, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RootUtils_dict_116_0_8, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RootUtils_dict_116_0_9, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "c - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__RootUtils_dict_116_0_10, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__RootUtils_dict_116_0_11, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__RootUtils_dict_116_0_12, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "c - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__RootUtils_dict_116_0_13, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__RootUtils_dict_116_0_14, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 3, 1, 1, 0, 
"u 'string' - 11 - str k - 'size_t' 0 - pos "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__RootUtils_dict_116_0_15, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 2, 1, 1, 0, 
"C - - 10 - s k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__RootUtils_dict_116_0_16, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__RootUtils_dict_116_0_17, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 2, 1, 1, 0, 
"k - 'size_t' 0 - rep c - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("assign",645,G__RootUtils_dict_116_0_18, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("assign",645,G__RootUtils_dict_116_0_19, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 3, 1, 1, 0, 
"u 'string' - 11 - str k - 'size_t' 0 - pos "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("assign",645,G__RootUtils_dict_116_0_20, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 2, 1, 1, 0, 
"C - - 10 - s k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("assign",645,G__RootUtils_dict_116_0_21, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("assign",645,G__RootUtils_dict_116_0_22, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 2, 1, 1, 0, 
"k - 'size_t' 0 - rep c - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_116_0_23, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 2, 1, 1, 0, 
"k - 'size_t' 0 - pos1 u 'string' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_116_0_24, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 4, 1, 1, 0, 
"k - 'size_t' 0 - pos1 u 'string' - 11 - str "
"k - 'size_t' 0 - pos2 k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_116_0_25, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 3, 1, 1, 0, 
"k - 'size_t' 0 - pos C - - 10 - s "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_116_0_26, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 2, 1, 1, 0, 
"k - 'size_t' 0 - pos C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_116_0_27, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 3, 1, 1, 0, 
"k - 'size_t' 0 - pos k - 'size_t' 0 - rep "
"c - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RootUtils_dict_116_0_28, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 3, 1, 1, 0, 
"k - 'size_t' 0 - pos1 k - 'size_t' 0 - n1 "
"u 'string' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RootUtils_dict_116_0_29, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 5, 1, 1, 0, 
"k - 'size_t' 0 - pos1 k - 'size_t' 0 - n1 "
"u 'string' - 11 - str k - 'size_t' 0 - pos2 "
"k - 'size_t' 0 - n2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RootUtils_dict_116_0_30, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 4, 1, 1, 0, 
"k - 'size_t' 0 - pos k - 'size_t' 0 - n1 "
"C - - 10 - s k - 'size_t' 0 - n2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RootUtils_dict_116_0_31, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 3, 1, 1, 0, 
"k - 'size_t' 0 - pos k - 'size_t' 0 - n1 "
"C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RootUtils_dict_116_0_32, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 4, 1, 1, 0, 
"k - 'size_t' 0 - pos k - 'size_t' 0 - n "
"k - 'size_t' 0 - rep c - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RootUtils_dict_116_0_33, 99, -1, -1, 1, 1, 1, 1, 9, "k - 'size_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RootUtils_dict_116_0_34, 99, -1, -1, 1, 1, 1, 1, 0, "k - 'size_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RootUtils_dict_116_0_35, 99, -1, -1, 1, 1, 1, 1, 9, "k - 'size_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RootUtils_dict_116_0_36, 99, -1, -1, 1, 1, 1, 1, 0, "k - 'size_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("c_str",539,G__RootUtils_dict_116_0_37, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("data",410,G__RootUtils_dict_116_0_38, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("length",642,G__RootUtils_dict_116_0_39, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RootUtils_dict_116_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n c - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RootUtils_dict_116_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RootUtils_dict_116_0_42, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RootUtils_dict_116_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - res_arg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__RootUtils_dict_116_0_44, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 0, 
"C - - 0 - s k - 'size_t' 0 - n "
"k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__RootUtils_dict_116_0_45, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"u 'string' - 11 - str k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__RootUtils_dict_116_0_46, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 - pos "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__RootUtils_dict_116_0_47, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__RootUtils_dict_116_0_48, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"c - - 0 - c k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rfind",531,G__RootUtils_dict_116_0_49, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"u 'string' - 11 - str k - 'size_t' 0 'npos' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rfind",531,G__RootUtils_dict_116_0_50, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 - pos "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rfind",531,G__RootUtils_dict_116_0_51, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 'npos' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rfind",531,G__RootUtils_dict_116_0_52, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"c - - 0 - c k - 'size_t' 0 'npos' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_first_of",1372,G__RootUtils_dict_116_0_53, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"u 'string' - 11 - str k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_first_of",1372,G__RootUtils_dict_116_0_54, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 - pos "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_first_of",1372,G__RootUtils_dict_116_0_55, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_first_of",1372,G__RootUtils_dict_116_0_56, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"c - - 0 - c k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_last_of",1256,G__RootUtils_dict_116_0_57, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"u 'string' - 11 - str k - 'size_t' 0 'npos' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_last_of",1256,G__RootUtils_dict_116_0_58, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 - pos "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_last_of",1256,G__RootUtils_dict_116_0_59, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 'npos' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_last_of",1256,G__RootUtils_dict_116_0_60, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"c - - 0 - c k - 'size_t' 0 'npos' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_first_not_of",1804,G__RootUtils_dict_116_0_61, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"u 'string' - 11 - str k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_first_not_of",1804,G__RootUtils_dict_116_0_62, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 - pos "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_first_not_of",1804,G__RootUtils_dict_116_0_63, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_first_not_of",1804,G__RootUtils_dict_116_0_64, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"c - - 0 - c k - 'size_t' 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_last_not_of",1688,G__RootUtils_dict_116_0_65, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"u 'string' - 11 - str k - 'size_t' 0 'npos' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_last_not_of",1688,G__RootUtils_dict_116_0_66, 107, -1, G__defined_typename("size_t"), 0, 3, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 - pos "
"k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_last_not_of",1688,G__RootUtils_dict_116_0_67, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"C - - 10 - s k - 'size_t' 0 'npos' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_last_not_of",1688,G__RootUtils_dict_116_0_68, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 8, 
"c - - 0 - c k - 'size_t' 0 'npos' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("substr",675,G__RootUtils_dict_116_0_69, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 0, 2, 1, 1, 8, 
"k - 'size_t' 0 '0' pos k - 'size_t' 0 'npos' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("compare",743,G__RootUtils_dict_116_0_70, 105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("compare",743,G__RootUtils_dict_116_0_71, 105, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_116_0_72, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 2, 1, 1, 0, 
"k - 'size_t' 0 '0' pos k - 'size_t' 0 'npos' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_116_0_73, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_stringcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string::iterator' - 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_116_0_74, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_stringcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'string::iterator' - 0 - first u 'string::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RootUtils_dict_116_0_75, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_stringcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RootUtils_dict_116_0_76, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_stringcLcLiterator), G__defined_typename("string::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RootUtils_dict_116_0_77, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_stringcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RootUtils_dict_116_0_78, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_stringcLcLiterator), G__defined_typename("string::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RootUtils_dict_116_0_79, 107, -1, G__defined_typename("string::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RootUtils_dict_116_0_80, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RootUtils_dict_116_0_81, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RootUtils_dict_116_0_82, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~string", 789, G__RootUtils_dict_116_0_83, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPlotUtils(void) {
   /* PlotUtils */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils));
   G__memfunc_setup("PlotUtils",944,G__RootUtils_dict_297_0_1, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotUtils",944,G__RootUtils_dict_297_0_2, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils), -1, 0, 4, 1, 1, 0, 
"U 'RooPlot' - 0 - plot C - - 10 '\"\"' titleplot "
"C - - 10 '0' xlabel C - - 10 '0' ylabel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotUtils",944,G__RootUtils_dict_297_0_3, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils), -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 0 - hist C - - 10 '\"\"' titlehist "
"C - - 10 '0' xlabel C - - 10 '0' ylabel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__RootUtils_dict_297_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "Reset all the arguments", (void*) NULL, 0);
   G__memfunc_setup("AddRooPlot",984,G__RootUtils_dict_297_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'RooPlot' - 0 - plot C - - 10 '\"\"' titleplot "
"C - - 10 '0' xlabel C - - 10 '0' ylabel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHist",673,G__RootUtils_dict_297_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 0 - hist C - - 10 '\"\"' titlehist "
"C - - 10 '0' xlabel C - - 10 '0' ylabel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__RootUtils_dict_297_0_7, 121, -1, -1, 0, 12, 1, 1, 0, 
"d - 'Double_t' 0 - xleft d - 'Double_t' 0 - ydown "
"d - 'Double_t' 0 - xright d - 'Double_t' 0 - ytop "
"C - - 10 - var1 C - - 10 '0' var2 "
"C - - 10 '0' var3 C - - 10 '0' var4 "
"C - - 10 '0' var5 C - - 10 '0' var6 "
"C - - 10 '0' var7 C - - 10 '0' var8", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTextLHCb",999,G__RootUtils_dict_297_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 '2012' year d - 'Double_t' 0 '0.15' xleft "
"d - 'Double_t' 0 '0.15' ydown", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLegend",856,G__RootUtils_dict_297_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - xleft d - 'Double_t' 0 - ydown "
"d - 'Double_t' 0 - xright d - 'Double_t' 0 - ytop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStats",827,G__RootUtils_dict_297_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPalette",1019,G__RootUtils_dict_297_0_11, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"rainbow\"' name i - 'Int_t' 0 '-1' nContour", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistograms",1448,G__RootUtils_dict_297_0_12, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"rainbow\"' name f - 'Float_t' 0 '1.0' alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotAllHist",1104,G__RootUtils_dict_297_0_13, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_TCanvas), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' option C - - 10 '\"canvas\"' canvas_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotHistSameCanvas",1817,G__RootUtils_dict_297_0_14, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_TCanvas), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"\"' option C - - 10 '\"canvas\"' canvas_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawVerticalLine",1616,G__RootUtils_dict_297_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x_pos s - 'Color_t' 0 '1' color "
"s - 'Style_t' 0 '9' style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawHorizontalLine",1856,G__RootUtils_dict_297_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - y_pos s - 'Color_t' 0 '1' color "
"s - 'Style_t' 0 '9' style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__RootUtils_dict_297_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXTitle",902,G__RootUtils_dict_297_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - xlabel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXTitleSize",1313,G__RootUtils_dict_297_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0.04' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXTitleOffset",1517,G__RootUtils_dict_297_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '1.' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXLabelSize",1279,G__RootUtils_dict_297_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0.04' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXLabelOffset",1483,G__RootUtils_dict_297_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0.005' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYTitle",903,G__RootUtils_dict_297_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - ylabel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYTitleSize",1314,G__RootUtils_dict_297_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0.04' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYTitleOffset",1518,G__RootUtils_dict_297_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '1.' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYLabelSize",1280,G__RootUtils_dict_297_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0.04' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYLabelOffset",1484,G__RootUtils_dict_297_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 '0.005' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYLabelBinLenght",1760,G__RootUtils_dict_297_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"N_{ev}\"' ylabel C - - 10 '0' bin_units", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RootUtils_dict_297_0_29, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_RooPlot), -1, 1, 1, 1, 1, 8, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RootUtils_dict_297_0_30, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PlotUtils::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RootUtils_dict_297_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PlotUtils::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RootUtils_dict_297_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PlotUtils::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RootUtils_dict_297_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PlotUtils::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RootUtils_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootUtils_dict_297_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RootUtils_dict_297_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PlotUtils::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RootUtils_dict_297_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PlotUtils::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RootUtils_dict_297_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PlotUtils::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RootUtils_dict_297_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PlotUtils::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PlotUtils", 944, G__RootUtils_dict_297_0_42, (int) ('i'), G__get_linked_tagnum(&G__RootUtils_dictLN_PlotUtils), -1, 0, 1, 1, 1, 0, "u 'PlotUtils' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PlotUtils", 1070, G__RootUtils_dict_297_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncConfigParser(void) {
   /* ConfigParser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_ConfigParser));
   G__memfunc_setup("ConfigParser",1219,G__RootUtils_dict_307_0_1, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_ConfigParser), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConfigParser",1219,G__RootUtils_dict_307_0_2, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_ConfigParser), -1, 0, 2, 1, 1, 0, 
"C - - 10 - nameconfigfile g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__RootUtils_dict_307_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - nameconfigfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__RootUtils_dict_307_0_4, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConstChar",1189,G__RootUtils_dict_307_0_5, 67, -1, -1, 0, 1, 1, 1, 1, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInt",587,G__RootUtils_dict_307_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDouble",891,G__RootUtils_dict_307_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntArray",1098,G__RootUtils_dict_307_0_8, 73, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDoubleArray",1402,G__RootUtils_dict_307_0_9, 68, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStringArray",1430,G__RootUtils_dict_307_0_10, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntVector",1214,G__RootUtils_dict_307_0_11, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDoubleVector",1518,G__RootUtils_dict_307_0_12, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStringVector",1546,G__RootUtils_dict_307_0_13, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTStringVector",1630,G__RootUtils_dict_307_0_14, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<TString>"), 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__RootUtils_dict_307_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVerbose",1026,G__RootUtils_dict_307_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RootUtils_dict_307_0_17, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ConfigParser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RootUtils_dict_307_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConfigParser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RootUtils_dict_307_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ConfigParser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RootUtils_dict_307_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ConfigParser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RootUtils_dict_307_0_21, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RootUtils_dict_307_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RootUtils_dict_307_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootUtils_dict_307_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RootUtils_dict_307_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConfigParser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RootUtils_dict_307_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ConfigParser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RootUtils_dict_307_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConfigParser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RootUtils_dict_307_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ConfigParser::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ConfigParser", 1219, G__RootUtils_dict_307_0_29, (int) ('i'), G__get_linked_tagnum(&G__RootUtils_dictLN_ConfigParser), -1, 0, 1, 1, 1, 0, "u 'ConfigParser' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ConfigParser", 1345, G__RootUtils_dict_307_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RootUtils_dict_307_0_31, (int) ('u'), G__get_linked_tagnum(&G__RootUtils_dictLN_ConfigParser), -1, 1, 1, 1, 1, 0, "u 'ConfigParser' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEstringcOallocatorlEstringgRsPgR(void) {
   /* vector<string,allocator<string> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__memfunc_setup("at",213,G__RootUtils_dict_313_0_1, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), G__defined_typename("vector<string,allocator<string> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__RootUtils_dict_313_0_2, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), G__defined_typename("vector<string,allocator<string> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RootUtils_dict_313_0_3, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RootUtils_dict_313_0_4, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RootUtils_dict_313_0_5, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR), G__defined_typename("vector<string,allocator<string> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RootUtils_dict_313_0_6, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR), G__defined_typename("vector<string,allocator<string> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RootUtils_dict_313_0_7, 107, -1, G__defined_typename("vector<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RootUtils_dict_313_0_8, 107, -1, G__defined_typename("vector<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RootUtils_dict_313_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<string,allocator<string> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__RootUtils_dict_313_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<string,allocator<string> >::size_type' 0 - sz u 'string' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__RootUtils_dict_313_0_11, 107, -1, G__defined_typename("vector<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RootUtils_dict_313_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RootUtils_dict_313_0_13, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), G__defined_typename("vector<string,allocator<string> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RootUtils_dict_313_0_14, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), G__defined_typename("vector<string,allocator<string> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__RootUtils_dict_313_0_15, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__RootUtils_dict_313_0_16, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<string,allocator<string> >::size_type' 0 - n u 'string' - 11 'string()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__RootUtils_dict_313_0_17, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__RootUtils_dict_313_0_18, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - first u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RootUtils_dict_313_0_19, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__RootUtils_dict_313_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__RootUtils_dict_313_0_21, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__RootUtils_dict_313_0_22, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__RootUtils_dict_313_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RootUtils_dict_313_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_313_0_25, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - position u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_313_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - position u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - first "
"u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_313_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - position k - 'vector<string,allocator<string> >::size_type' 0 - n "
"u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__RootUtils_dict_313_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_313_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_313_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - first u 'vector<string,allocator<string> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RootUtils_dict_313_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<string,allocator<string> >", 3392, G__RootUtils_dict_313_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEstringcOallocatorlEstringgRsPgRcLcLiterator(void) {
   /* vector<string,allocator<string> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__RootUtils_dict_314_0_1, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__RootUtils_dict_314_0_2, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "U 'string' 'vector<string,allocator<string> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__RootUtils_dict_314_0_3, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), G__defined_typename("vector<string,allocator<string> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__RootUtils_dict_314_0_4, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_string), G__defined_typename("vector<string,allocator<string> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__RootUtils_dict_314_0_5, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__RootUtils_dict_314_0_6, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__RootUtils_dict_314_0_7, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__RootUtils_dict_314_0_8, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RootUtils_dict_314_0_9, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), G__defined_typename("vector<string,allocator<string> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<string,allocator<string> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__RootUtils_dict_314_0_10, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<string,allocator<string> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__RootUtils_dict_314_0_11, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<string,allocator<string> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__RootUtils_dict_314_0_12, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<string,allocator<string> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__RootUtils_dict_314_0_13, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<string,allocator<string> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__RootUtils_dict_314_0_14, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_string), G__defined_typename("vector<string,allocator<string> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RootUtils_dict_314_0_15, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__RootUtils_dict_314_0_16, (int) ('i'), G__get_linked_tagnum(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__RootUtils_dict_314_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR(void) {
   /* map<string,string,less<string>,allocator<pair<const string,string> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__RootUtils_dict_563_0_1, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__RootUtils_dict_563_0_2, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__RootUtils_dict_563_0_3, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__RootUtils_dict_563_0_4, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RootUtils_dict_563_0_5, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RootUtils_dict_563_0_6, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RootUtils_dict_563_0_7, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RootUtils_dict_563_0_8, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RootUtils_dict_563_0_9, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RootUtils_dict_563_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RootUtils_dict_563_0_11, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RootUtils_dict_563_0_12, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RootUtils_dict_563_0_13, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_string), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_563_0_14, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,string>' 'map<string,string,less<string>,allocator<pair<const string,string> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_563_0_15, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - position u 'pair<string,string>' 'map<string,string,less<string>,allocator<pair<const string,string> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_563_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_563_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_563_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_563_0_19, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_563_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RootUtils_dict_563_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RootUtils_dict_563_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__RootUtils_dict_563_0_23, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__RootUtils_dict_563_0_24, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__RootUtils_dict_563_0_25, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__RootUtils_dict_563_0_26, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,string,less<string>,allocator<pair<const string,string> > >", 6898, G__RootUtils_dict_563_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator(void) {
   /* map<string,string,less<string>,allocator<pair<const string,string> > >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__RootUtils_dict_565_0_1, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__RootUtils_dict_565_0_2, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RootUtils_dict_565_0_3, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__RootUtils_dict_565_0_4, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_pairlEstringcOstringgR), G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__RootUtils_dict_565_0_5, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_pairlEstringcOstringgR), G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::value_type"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__RootUtils_dict_565_0_6, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__RootUtils_dict_565_0_7, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__RootUtils_dict_565_0_8, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__RootUtils_dict_565_0_9, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__RootUtils_dict_565_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__RootUtils_dict_565_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__RootUtils_dict_565_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR(void) {
   /* map<string,bool,less<string>,allocator<pair<const string,bool> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__RootUtils_dict_570_0_1, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__RootUtils_dict_570_0_2, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__RootUtils_dict_570_0_3, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__RootUtils_dict_570_0_4, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RootUtils_dict_570_0_5, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__RootUtils_dict_570_0_6, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__RootUtils_dict_570_0_7, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__RootUtils_dict_570_0_8, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__RootUtils_dict_570_0_9, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__RootUtils_dict_570_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__RootUtils_dict_570_0_11, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__RootUtils_dict_570_0_12, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__RootUtils_dict_570_0_13, 103, -1, -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_570_0_14, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,bool>' 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_570_0_15, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - position u 'pair<string,bool>' 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_570_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__RootUtils_dict_570_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_570_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_570_0_19, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__RootUtils_dict_570_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__RootUtils_dict_570_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RootUtils_dict_570_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__RootUtils_dict_570_0_23, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__RootUtils_dict_570_0_24, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__RootUtils_dict_570_0_25, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__RootUtils_dict_570_0_26, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,bool,less<string>,allocator<pair<const string,bool> > >", 6428, G__RootUtils_dict_570_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator(void) {
   /* map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__RootUtils_dict_572_0_1, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__RootUtils_dict_572_0_2, 105, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RootUtils_dict_572_0_3, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__RootUtils_dict_572_0_4, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_pairlEstringcOboolgR), G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__RootUtils_dict_572_0_5, 85, G__get_linked_tagnum(&G__RootUtils_dictLN_pairlEstringcOboolgR), G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__RootUtils_dict_572_0_6, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__RootUtils_dict_572_0_7, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__RootUtils_dict_572_0_8, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__RootUtils_dict_572_0_9, 117, G__get_linked_tagnum(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__RootUtils_dict_572_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__RootUtils_dict_572_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__RootUtils_dict_572_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRootUtils_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRootUtils_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRootUtils_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RootUtils_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_stringcLcLiterator = { "string::iterator" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEstringcLcLiteratorgR = { "reverse_iterator<string::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RootUtils_dictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_RooPlot = { "RooPlot" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_ColorPalette = { "ColorPalette" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_PlotUtils = { "PlotUtils" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlERooPlotmUcOallocatorlERooPlotmUgRsPgR = { "vector<RooPlot*,allocator<RooPlot*> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEvectorlERooPlotmUcOallocatorlERooPlotmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooPlot*,allocator<RooPlot*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR = { "vector<TH1*,allocator<TH1*> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1*,allocator<TH1*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_ConfigParser = { "ConfigParser" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator = { "vector<string,allocator<string> >::iterator" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_vectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgR = { "vector<Option<string>,allocator<Option<string> > >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_reverse_iteratorlEvectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Option<string>,allocator<Option<string> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_lesslEstringgR = { "less<string>" , 115 , -1 };
G__linked_taginfo G__RootUtils_dictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR = { "allocator<pair<const string,string> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_pairlEstringcOstringgR = { "pair<string,string>" , 115 , -1 };
G__linked_taginfo G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator = { "map<string,string,less<string>,allocator<pair<const string,string> > >::iterator" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator = { "map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__RootUtils_dictLN_allocatorlEpairlEconstsPstringcOboolgRsPgR = { "allocator<pair<const string,bool> >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_pairlEstringcOboolgR = { "pair<string,bool>" , 115 , -1 };
G__linked_taginfo G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__RootUtils_dictLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool>" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRootUtils_dict() {
  G__RootUtils_dictLN_TClass.tagnum = -1 ;
  G__RootUtils_dictLN_TBuffer.tagnum = -1 ;
  G__RootUtils_dictLN_TMemberInspector.tagnum = -1 ;
  G__RootUtils_dictLN_TObject.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_string.tagnum = -1 ;
  G__RootUtils_dictLN_stringcLcLiterator.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEstringcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RootUtils_dictLN_TH1.tagnum = -1 ;
  G__RootUtils_dictLN_RooPlot.tagnum = -1 ;
  G__RootUtils_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__RootUtils_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__RootUtils_dictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_TCanvas.tagnum = -1 ;
  G__RootUtils_dictLN_ColorPalette.tagnum = -1 ;
  G__RootUtils_dictLN_PlotUtils.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlERooPlotmUcOallocatorlERooPlotmUgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEvectorlERooPlotmUcOallocatorlERooPlotmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_ConfigParser.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_vectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_reverse_iteratorlEvectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootUtils_dictLN_lesslEstringgR.tagnum = -1 ;
  G__RootUtils_dictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_pairlEstringcOstringgR.tagnum = -1 ;
  G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__RootUtils_dictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__RootUtils_dictLN_allocatorlEpairlEconstsPstringcOboolgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR.tagnum = -1 ;
  G__RootUtils_dictLN_pairlEstringcOboolgR.tagnum = -1 ;
  G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__RootUtils_dictLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRootUtils_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_string),sizeof(string),-1,36608,(char*)NULL,G__setup_memvarstring,G__setup_memfuncstring);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_stringcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEstringcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_TH1);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_RooPlot);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_ColorPalette);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_PlotUtils),sizeof(PlotUtils),-1,324864,(char*)NULL,G__setup_memvarPlotUtils,G__setup_memfuncPlotUtils);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlERooPlotmUcOallocatorlERooPlotmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEvectorlERooPlotmUcOallocatorlERooPlotmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_ConfigParser),sizeof(ConfigParser),-1,296192,(char*)NULL,G__setup_memvarConfigParser,G__setup_memfuncConfigParser);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),sizeof(vector<string,allocator<string> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEstringcOallocatorlEstringgRsPgR,G__setup_memfuncvectorlEstringcOallocatorlEstringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator),sizeof(vector<string,allocator<string> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlEstringcOallocatorlEstringgRsPgRcLcLiterator,G__setup_memfuncvectorlEstringcOallocatorlEstringgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_vectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_reverse_iteratorlEvectorlEOptionlEstringgRcOallocatorlEOptionlEstringgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_lesslEstringgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >),-1,36608,(char*)NULL,G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR,G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_pairlEstringcOstringgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator),sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >::iterator),-1,2816,(char*)NULL,G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator,G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_allocatorlEpairlEconstsPstringcOboolgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),sizeof(map<string,bool,less<string>,allocator<pair<const string,bool> > >),-1,36608,(char*)NULL,G__setup_memvarmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR,G__setup_memfuncmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_pairlEstringcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator),sizeof(map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator),-1,2816,(char*)NULL,G__setup_memvarmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator,G__setup_memfuncmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__RootUtils_dictLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR);
}
extern "C" void G__cpp_setupRootUtils_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRootUtils_dict()");
  G__set_cpp_environmentRootUtils_dict();
  G__cpp_setup_tagtableRootUtils_dict();

  G__cpp_setup_inheritanceRootUtils_dict();

  G__cpp_setup_typetableRootUtils_dict();

  G__cpp_setup_memvarRootUtils_dict();

  G__cpp_setup_memfuncRootUtils_dict();
  G__cpp_setup_globalRootUtils_dict();
  G__cpp_setup_funcRootUtils_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRootUtils_dict();
  return;
}
class G__cpp_setup_initRootUtils_dict {
  public:
    G__cpp_setup_initRootUtils_dict() { G__add_setup_func("RootUtils_dict",(G__incsetup)(&G__cpp_setupRootUtils_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRootUtils_dict() { G__remove_setup_func("RootUtils_dict"); }
};
G__cpp_setup_initRootUtils_dict G__cpp_setup_initializerRootUtils_dict;

